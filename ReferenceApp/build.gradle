apply plugin: 'com.android.application'

def APP_VERSION = "2.3.0" // The version must be updated every build. Git+Travis will also report if there will be an issue on a pull request
def TAR_VERSION = "2.8.2"
def APK_FILENAME = "Truex-Android-ReferenceApp-" + APP_VERSION + ".apk";

buildscript {
    ext {
        buildType = findProperty("build_type") ?: "qa"
    }
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.truex.referenceapp"
        minSdkVersion 30
        targetSdkVersion 34
        versionCode 2
        versionName APP_VERSION
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all {
            variant ->
                variant.outputs.each{
                    output->
                        output.outputFileName = APK_FILENAME
                }
        }
    }
    flavorDimensions "platform"
    productFlavors {
        phone {
            dimension "platform"
        }
        tv {
            dimension "platform"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'com.truex.referenceapp'
}

repositories {
    maven {
        // Uncomment one or the other to use qa vs prod version of TAR lib.
        //url "https://s3.amazonaws.com/android.truex.com/tar/qa/maven"
        url "https://s3.amazonaws.com/android.truex.com/tar/prod/maven"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'androidx.media3:media3-exoplayer:1.4.1'
    implementation 'androidx.media3:media3-ui:1.4.1'
    implementation 'org.apache.commons:commons-text:1.9'

    // true[X] Ad Renderer (TAR) Dependency
    implementation "com.truex:TruexAdRenderer-Android:$TAR_VERSION"
}

// Needed to avoid duplicate Kotlin class errors
configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

task("getApkFilename") {
    doLast {
        println APK_FILENAME
    }
}